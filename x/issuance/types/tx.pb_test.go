// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: issuance/v1beta1/tx.proto

package types

import (
	context "context"
	"reflect"
	"testing"

	grpc1 "github.com/gogo/protobuf/grpc"
	grpc "google.golang.org/grpc"
)

func Test_msgClient_IssueToken(t *testing.T) {
	type fields struct {
		cc grpc1.ClientConn
	}
	type args struct {
		ctx  context.Context
		in   *MsgIssueToken
		opts []grpc.CallOption
	}
	tests := []struct {
		name    string
		fields  fields
		args    args
		want    *MsgIssueTokenResponse
		wantErr bool
	}{
		// TODO: Add test cases.
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			c := &msgClient{
				cc: tt.fields.cc,
			}
			got, err := c.IssueToken(tt.args.ctx, tt.args.in, tt.args.opts...)
			if (err != nil) != tt.wantErr {
				t.Errorf("msgClient.IssueToken() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("msgClient.IssueToken() = %v, want %v", got, tt.want)
			}
		})
	}
}
